#!/usr/bin/env bash

set -euo pipefail

echo "testing administrative accounts"
thisDir=$(readlink -e "$(dirname "${BASH_SOURCE[0]}")")

rc=0
failMessage=""

skipdev=""
if $(grep GARDENLINUX_FEATURES /etc/os-release | grep -q _dev); then
	skipdev="dev"
fi

for grp in $(getent group | grep -f <( awk -F: '{print $1}' "${thisDir}/user_groups.list")); do
	users=$(echo "$grp" | awk -F: '{print $4}' | tr "," "\n" | grep -vx "$skipdev" || true | sort | paste -s -d " ")
	group=$(echo "$grp" | awk -F: '{print $1}')
	expectedUsers=$(grep "$group" "${thisDir}/user_groups.list" | awk -F: '{ print $2 }' | tr "," "\n" | sort | paste -s -d " ")
	if [[ "$users" != "$expectedUsers" ]]; then
		rc=1
		failMessage="${failMessage}${group} group         : ${users}\n"
		failMessage="${failMessage}${group} group expected: ${expectedUsers}\n"
	fi
done	

sudoers=""
for user in $(getent passwd | awk -F: '{ print $1}' | grep -vx root | grep -vx "$skipdev"); do
       if sudo -l -U "$user" 2> /dev/null | grep -q "may run the following"; then
	       true
	       if ! grep -q "$user" <(grep 'sudo\|wheel' "${thisDir}/user_groups.list" | awk -F: '{ print $2 }'); then
		       sudoers="${sudoers}${user} "
	       fi
       fi	       
done

if [[ ! -z "$sudoers" ]]; then
	rc=1	
	failMessage="${failMessage}The following users can execute sudo commands even if not in wheel/sudo groups : ${sudoers}"
fi	

if [[ ${rc} -eq 0 ]]; then
	echo "OK - all user accounts/groups are as expected"
	exit 0
else
	echo "FAIL - following issues have been found"
	echo -e "${failMessage}"
	exit 1
fi
