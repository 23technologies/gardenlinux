#!/usr/bin/env bash
set -euo pipefail

package=$(basename $0)
thisDir="$(dirname "$(readlink -f "$BASH_SOURCE")")"
#source $thisDir/defaults

KERNEL_ORG=5.4.19
KERNEL_VERSION=5.4.72
KERNEL_RT_VERSION=5.4.70-rt40

# inporting relevant maintainers 
#  Linux Torcalds and Greg Kroah-Hartman
gpg --locate-keys torvalds@kernel.org gregkh@kernel.org
gpg --tofu-policy good 647F28654894E3BD457199BE38DBBDC86092693E
#  Steven Rostedt <rostedt@goodmis.org>
gpg --keyserver hkps://keyserver.ubuntu.com --recv-keys 514B0EDE3C387F944FB3799329E574109AEBFAAA
gpg --tofu-policy good 514B0EDE3C387F944FB3799329E574109AEBFAAA
	
# minimal create requirements	
sudo apt-get install --no-install-recommends -y equivs kernel-wedge python3-debian rsync libdistro-info-perl git
#  getting the kernel and checking the signature
wget https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-$KERNEL_VERSION.tar.{sign,xz}
wget https://mirrors.edge.kernel.org/pub/linux/kernel/projects/rt/5.4/patches-$KERNEL_RT_VERSION.tar.{sign,xz}
xz -dc linux-$KERNEL_VERSION.tar.xz      | gpg --verify linux-$KERNEL_VERSION.tar.sign -
xz -dc patches-$KERNEL_RT_VERSION.tar.xz | gpg --verify patches-$KERNEL_RT_VERSION.tar.sign -

# debian latest source code for kernel
#  preparing the old kernel, but keeping the newest codebase but copying the config / patch files
if [ ! -d linux ]; then
	git clone https://salsa.debian.org/kernel-team/linux.git
else
	cd linux
	git pull
	cd ..
fi

if [ ! -d linux-$KERNEL_ORG ]; then
	cp -R linux linux-$KERNEL_ORG
fi
cd linux-$KERNEL_ORG
git -c advice.detachedHead=false checkout debian/$KERNEL_ORG-1
git pull
cd ..

# getting the latest aufs5
if 
git clone https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git
git clone https://github.com/sfjro/aufs5-standalone.git
#  checking out aufs for 5.4 kernel
cd  aufs5-standalone
git -c advice.detachedHead=false checkout aufs5.4
cd ..

# old sphinx runs faster and does not bail out on errors
wget -P /tmp https://snapshot.debian.org/archive/debian-ports/20200409T204941Z/pool/main/s/sphinx/{libjs-sphinxdoc_1.8.5-9,python3-sphinx_1.8.5-9,sphinx-common_1.8.5-9}_all.deb
sudo apt-get install -y -f /tmp/libjs-sphinxdoc_1.8.5-9_all.deb /tmp/sphinx-common_1.8.5-9_all.deb /tmp/python3-sphinx_1.8.5-9_all.deb

##### building the kernel
cd linux
# saving upstream defines e.g. for gcc-10
mv debian/config/defines ..
rm -rf debian/config debian/patches debian/patches-rt/*
# copying configs and patches from the old-kernel
cp -R ../linux-$KERNEL_ORG/debian/patches ../linux-$KERNEL_ORG/debian/config debian/
mv ../defines debian/config/

# applying recommended patches
debian/bin/genpatch-rt ../patches-$KERNEL_RT_VERSION.tar.xz
debian/bin/genpatch-aufs ../aufs5-standalone
patch -p1 < manual/$package.patch

# changelog magic
#  empty changelog with headers for the old kernel (including all changes we will have done)
mv debian/changelog debian/changelog.tmp
cat - > debian/changelog <<EOF
linux ($KERNEL_ORG-1) UNRELEASED; urgency=medium

  [ GardenLinux Maintainers ]
  * Compile with gcc-10 on all architectures.
  * [rt] Update to $KERNEL_RT_VERSION and re-enable.
  * Bump ABI to 5.
  * re-apply relax-relocations since we have a newer linker then 2.26
  * fix traceid_list linker problem on gcc-10
  * fix udev_context linker problem on gcc-10

 -- GardenLinux Maintainers <contact@gardenlinux.io>  $(date -R)

EOF
#  debian generates the changelog headers
debian/bin/stable-update ../linux-stable $KERNEL_VERSION
#  prepending the offical log (which means most likely version downgrade)
cat debian/changelog debian/changelog.tmp > debian/changelog.new
mv debian/changelog.new debian/changelog
rm debian/changelog.tmp

# building a debian conform kernelsource (excluding copyright inflicting stuff)
debian/bin/genorig.py ../linux-*.tar.xz
# populating the tree with kernel sources
make -f debian/rules orig
# createing the control files (depending on the new abi number from patches)
debian/bin/gencontrol.py
# determining the final build dependencies
mk-build-deps debian/control
mv linux-build-deps_* ..
sudo apt-get install -y --no-install-recommends -f ../linux-build-deps_*_amd64.deb
# one debian build rule that has to fail (even documented!)
make -f debian/rules debian/control-real || /bin/true
debuild 

# evicting the final build elements - including source and dependencies
sudo cp ../*\$(dpkg-parsechangelog --show-field Version)* ../$package*.orig.tar.* /packages"

