#!/usr/bin/env bash
set -euo pipefail

. $(dirname $0)/.helper
. $(dirname $0)/linux.d/VERSION

gpg --locate-keys torvalds@kernel.org gregkh@kernel.org
gpg --tofu-policy good 647F28654894E3BD457199BE38DBBDC86092693E
# Steven Rostedt <rostedt@goodmis.org>
gpg --keyserver hkps://keyserver.ubuntu.com --recv-keys 514B0EDE3C387F944FB3799329E574109AEBFAAA
gpg --tofu-policy good 514B0EDE3C387F944FB3799329E574109AEBFAAA
	
# minimal create requirements	
sudo apt-get install --no-install-recommends -y equivs kernel-wedge python3-debian rsync libdistro-info-perl git
wget https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-$KERNEL_VERSION.tar.{sign,xz}
wget https://mirrors.edge.kernel.org/pub/linux/kernel/projects/rt/5.4/patches-$KERNEL_RT_VERSION.tar.{sign,xz}
xz -dc linux-$KERNEL_VERSION.tar.xz      | gpg --verify linux-$KERNEL_VERSION.tar.sign -
xz -dc patches-$KERNEL_RT_VERSION.tar.xz | gpg --verify patches-$KERNEL_RT_VERSION.tar.sign -

git clone https://salsa.debian.org/kernel-team/$src.git
# preparing the old kernel, but keeping the newest codebase but copying the config / patch files
cp -R $src linux-$KERNEL_DEBIAN
cd linux-$KERNEL_DEBIAN
git -c advice.detachedHead=false checkout debian/$KERNEL_DEBIAN-1
cd ..

git clone https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git
git clone https://github.com/sfjro/aufs5-standalone.git
# checking out aufs for 5.4 kernel
cd aufs5-standalone
git -c advice.detachedHead=false checkout aufs5.4
cd ..

# old sphinx runs faster and does not bail out on errors
wget -P /tmp https://snapshot.debian.org/archive/debian-ports/20200409T204941Z/pool/main/s/sphinx/{libjs-sphinxdoc_1.8.5-9_all.deb,python3-sphinx_1.8.5-9_all.deb,sphinx-common_1.8.5-9_all.deb}
sudo apt-get install -f -y /tmp/libjs-sphinxdoc_1.8.5-9_all.deb
sudo apt-get install -f -y /tmp/sphinx-common_1.8.5-9_all.deb
sudo apt-get install -f -y /tmp/python3-sphinx_1.8.5-9_all.deb

# build of current kernel
cd $src
# keeping the upstream defines e.g. for gcc-10
mv debian/config/defines ..
rm -rf debian/config debian/patches debian/patches-rt/*
cp -R ../linux-$KERNEL_DEBIAN/debian/patches ../linux-$KERNEL_DEBIAN/debian/config debian/
mv ../defines debian/config/
debian/bin/genpatch-rt ../patches-$KERNEL_RT_VERSION.tar.xz
	
debian/bin/genpatch-aufs ../aufs5-standalone
sed -i "s/abiname:.*/abiname:$KERNEL_ABI/" debian/config/defines

patch -p1 < $srcDir/builderror.patch
patch -p1 < $srcDir/missinglds.patch
patch -p1 < $srcDir/fuzz.patch

patch -p1 < $srcDir/relax.patch
patch -p1 < $srcDir/udev.patch
patch -p1 < $srcDir/analogix.patch
patch -p1 < $srcDir/series.patch

# changelog magic
mv debian/changelog debian/changelog.tmp
cat - > debian/changelog <<EOF
linux ($KERNEL_DEBIAN-1) UNRELEASED; urgency=medium

  [ Garden Linux Maintainers ]
  * Compile with gcc-10 on all architectures.
  * [rt] Update to $KERNEL_RT_VERSION and re-enable.
  * Bump ABI to $KERNEL_ABI.
  * re-apply relax-relocations since we have a newer linker then 2.26
  * missing lds files fixed
  * fix traceid_list linker problem on gcc-10
  * fix udev_context linker problem on gcc-10

 -- Garden Linux Maintainers <contact@gardenlinux.io>  $(date -R)

EOF

debian/bin/stable-update ../linux-stable $KERNEL_VERSION
cat debian/changelog debian/changelog.tmp > debian/changelog.new
mv debian/changelog.new debian/changelog
rm debian/changelog.tmp
	
debian/bin/genorig.py ../linux-*.tar.xz
exit
make -f debian/rules orig
debian/bin/gencontrol.py
TMPDIR=.. mk-build-deps debian/control
sudo apt-get install -y --no-install-recommends -f ../linux-build-deps_*_${KERNEL_ARCH}.deb
# missing in dependencies on arm64
[ "${KERNEL_ARCH}"  == "arm64" ] && sudo apt install -y --no-install-recommends gcc-arm-linux-gnueabihf 
make -f debian/rules debian/control-real || /bin/true

donotmove="$(ls ..)"
debuild
move_package .. $donotmove
